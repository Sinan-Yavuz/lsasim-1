% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/questionnaire_gen.R
\name{questionnaire_gen}
\alias{questionnaire_gen}
\title{Generation of ordinal and continuous variables}
\usage{
questionnaire_gen(n_obs, cat_prop = NULL, cor_matrix = NULL,
  c_mean = NULL, c_sd = NULL, theta = FALSE, n_vars = NULL,
  n_X = NULL, n_W = NULL, family = NULL, cov_matrix = NULL,
  n_fac = NULL, n_ind = NULL, Lambda = 0:1, full_output = FALSE)
}
\arguments{
\item{n_obs}{number of observations to generate.}

\item{cat_prop}{list of cumulative proportions for each item. If \code{theta
= TRUE}, the first element of \code{cat_prop} must be a scalar 1, which
corresponds to the \code{theta}.}

\item{cor_matrix}{latent correlation matrix. The first row/column corresponds
to the latent trait (Y). The other rows/columns correspond to the
continuous (X) and discrete (W) background variables, in the same order as
\code{cat_prop}.}

\item{c_mean}{is a vector of population means for each continuous variable.}

\item{c_sd}{is a vector of population standard deviations for each continuous
variable.}

\item{theta}{if \code{TRUE} will label the first continuous variable 'theta'.}

\item{n_vars}{number of total variables, continuous (X), discrete (W) and
theta (Y).}

\item{n_X}{number of continuous background variables. If not provided, a
random number of continuous variables will be generated.}

\item{n_W}{either a scalar corresponding to the number of categorical
background variables or a vector with the number of categories for each
categorical variable. If not provided, a random number of categorical
variables will be generated.}

\item{family}{distribution of the background variables. Can be NULL or
'gaussian'.}

\item{cov_matrix}{latent covariance matrix, formatted as \code{cor_matrix}.}

\item{n_fac}{number of factors (currently out of use)}

\item{n_ind}{number of indicators per factor (currently out of use)}

\item{Lambda}{either a matrix containing the factor loadings or a vector
containing the lower and upper limits for a randomly-generated Lambda
matrix (currently out of use)}

\item{full_output}{if \code{TRUE}, output will be a list containing all
function parameters.}
}
\description{
Creates a data frame of discrete and continuous variables based on a latent
correlation matrix and marginal proportions. This function is, in effect, a
wrapper for
}
\section{Details}{
 \code{cat_prop} is a list where \code{length(cat_prop)} is
  the number of items to be generated.  Each element of the list is a vector
  containing the marginal cumulative proportions for each category, summing
  to 1.  For continuous items, the associated element in the list should be
  1.

  \code{cor_matrix} is correlation matrix that is the same size as
  \code{length(cat_prop)}.  The correlations related to the correlation
  between variables on the latent scale.

  \code{c_mean and c_sd} are each vectors whose length is equal to the number
  of continuous variables as specified by \code{cat_prop}.  The default is to
  keep the continuous variables with mean zero and standard deviation of one.

  \code{theta} is a logical indicator that determines if the first continuous
  item should be labeled \emph{theta}. If \code{theta = TRUE} but there are
  no continuous variables generated, an error will be returned.

  If \code{cat_prop} is a named list, those names will be used as variable
  names for the returned \code{data.frame}.  Generic names will be provided
  to the variables if \code{cat_prop} is not named.
}

\examples{
# Using polychoric correlations
cum_prop <- list(c(1), c(.25, .6, 1))  # one continuous, one with 3 categories
questionnaire_gen(n_obs = 10, cat_prop = cum_prop,
                  cor_matrix = matrix(c(1, .6, .6, 1), nrow = 2),
                  c_mean = 2, c_sd = 1.5, theta = TRUE)

# Using the multinomial distribution
# two categorical variables W: one has 2 categories, the other has 3
cum_prop <- list(1, c(.25, 1), c(.2, .8, 1))
yw_cov <- matrix(c(1, .5, .5, .5, 1, .8, .5, .8, 1), nrow = 3)
questionnaire_gen(n_obs = 10, cat_prop = cum_prop, cov_matrix = yw_cov,
                  family = "gaussian")

# Not providing covariance matrix
questionnaire_gen(n_obs = 10,
                  cat_prop = list(c(.25, 1), c(.6, 1), c(.2, 1)),
                  family = "gaussian", n_fac = 4, n_ind = 3)
}
